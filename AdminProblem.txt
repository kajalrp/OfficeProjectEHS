 <Grid>
        <!--<Label Content="Administrator Page" FontSize="30" HorizontalAlignment="Left" Margin="155,63,0,0" VerticalAlignment="Top"/>
        <Button Content="View Property By Region" FontSize="18"  HorizontalAlignment="Left" Margin="155,219,0,0" VerticalAlignment="Top" Width="255" Click="Button_Click_1"/>
        <Button Content="View Property By Owner" FontSize="18"  HorizontalAlignment="Left" Margin="155,269,0,0" VerticalAlignment="Top" Width="255" Click="Button_Click_2"/>
        <Button Content="Delete property"  FontSize="18" HorizontalAlignment="Left" Margin="155,316,0,0" VerticalAlignment="Top" Width="255" RenderTransformOrigin="0.714,-0.577" Click="Button_Click_3"/>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="Administrator Page" FontSize="20" Grid.ColumnSpan="2" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" Margin="19,0,-184,20" Width="373"/>

        <TextBlock Text="Product Name" Grid.Row="1" Grid.Column="0" Margin="5"/>
        <TextBlock FontFamily="Calibri" FontWeight="DemiBold" FontSize="20" Foreground="AntiqueWhite" Padding="2" Margin="0,0,0,0" 
                   Grid.Column="0" Grid.Row="1
                   ">view Property by Region</TextBlock>
        <ComboBox Grid.Column="1" Grid.Row="1" Opacity="0.7" Margin="0,1,-155,0" Name="cmbSellerCity"/>
        <Button Grid.Column="2" Grid.Row="1" Content="Submit" Margin="180,1,-180,28" Grid.RowSpan="2" Click="Button_Click"></Button>
        <Button Name="btnCity" Grid.Column="3" Grid.Row="1" Content="New Button" Margin="180,1,-180,28" Grid.RowSpan="2" Click="BtnCity_Click" ></Button>

        <TextBlock FontFamily="Calibri" FontWeight="DemiBold" FontSize="20" Foreground="AntiqueWhite" Padding="2" Margin="0,0,0,0" Grid.Column="0" Grid.Row="2
                   ">view Property by owner</TextBlock>

        <ComboBox Grid.Column="1" Grid.Row="2" Opacity="0.7" Margin="0,1,-155,0" Name="cmbonwer" />
        <Button Grid.Column="2" Grid.Row="2" Content="Submit" Margin="180,1,-180,28" Grid.RowSpan="3" Click="Button_Click_2">
        </Button>



        <Button FontFamily="Calibri" FontWeight="Regular" FontSize="20" 
                Padding="2" Margin="0,0,0,0" 
                   Grid.Column="0" Grid.Row="3" Click="Button_Click_1">Delete the Property</Button>




    </Grid>


-------------------------------------------------------------------------------------------------------------------------------------------------------------




using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using EHS.BusinessLayer;

namespace EasyHousingSolution
{
    /// <summary>
    /// Interaction logic for Admin.xaml
    /// </summary>
    public partial class Admin : Window
    {
        Training_24Oct18_PuneEntities sellerDbContext = null;
        public Admin()
        {
            InitializeComponent();
            sellerDbContext = new Training_24Oct18_PuneEntities();

            cmbSellerCity.ItemsSource = sellerBL.ViewCity().ToList();
            cmbSellerCity.DisplayMemberPath = "CityName";
            cmbonwer.ItemsSource = sellerBL.ViewOwner().ToList();
            cmbonwer.DisplayMemberPath = "FirstName";
        }
        BuyerBL buyerBL = new BuyerBL();
        Buyer buyer = new Buyer();
        SellerBL sellerBL = new SellerBL();
        Seller seller = new Seller();
        State state = new State();
        City city = new City();
        Property prop = new Property();



        private void Button_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Region();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        public void Region()
        {
            SellerFunc SellerFuncObj = new SellerFunc();
            try
            {

                //List<Seller> region = sellerDbContext.Sellers.ToList();
                //List<Property> prop1 = new List<Property>();
                City ct = (City)cmbSellerCity.SelectedValue;
                seller.CityId = sellerBL.getCityId(ct.CityName);

                var sellerId = from seller in sellerDbContext.Sellers
                               join city in sellerDbContext.Cities
                               on seller.CityId equals city.CityId
                               where seller.CityId == ct.CityId
                               join prop in sellerDbContext.Properties
                               on seller.SellerId equals prop.SellerId
                               select new { 
                                prop.PropertyName,
                                prop.PriceRange
                               };

                foreach (var item in sellerId)
                {
                    MessageBox.Show("the Property name is" + item.PropertyName+" "+ "Range is:"+item.PriceRange);
                }

                
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            try
            {
                PropertyByOwner();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
        public void PropertyByOwner()
        {
            try
            {
                List<SellerFunc> owner = new List<SellerFunc>();
                List<Property> prop1 = new List<Property>();
                Seller st = (Seller)cmbonwer.SelectedItem;
                seller.SellerId = sellerBL.getSellerId(st.FirstName);
                var own = from owner1 in owner
                          where st.SellerId == seller.SellerId && seller.SellerId == prop.PropertyId
                          select prop.PropertyName;

                MessageBox.Show("the Property name is" + own);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            Console.ReadLine();
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            try
            {


                DeleteProperty();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        public void DeleteProperty()
        {
            try
            {

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

       

        private void BtnCity_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Region();
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
    }
}